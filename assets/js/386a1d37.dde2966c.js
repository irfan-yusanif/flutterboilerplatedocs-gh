"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["88449"],{43177:function(e,t,n){n.r(t),n.d(t,{default:()=>d,frontMatter:()=>a,metadata:()=>i,assets:()=>l,toc:()=>c,contentTitle:()=>o});var i=JSON.parse('{"id":"build-pre-call-ui/build-your-own/edit-user-name","title":"Edit user name","description":"A common use case of pre-call UI is to give the user a option to set / edit their name.","source":"@site/docs/rn-ui-kit/build-pre-call-ui/build-your-own/edit-user-name.mdx","sourceDirName":"build-pre-call-ui/build-your-own","slug":"/build-pre-call-ui/build-your-own/edit-user-name","permalink":"/react-native/build-pre-call-ui/build-your-own/edit-user-name","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Edit user name","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Basic structure","permalink":"/react-native/build-pre-call-ui/build-your-own/initial-code-skeleton"},"next":{"title":"Audio/video - Preview","permalink":"/react-native/build-pre-call-ui/build-your-own/add-audio-video-preview"}}'),s=n("85893"),r=n("50065");let a={title:"Edit user name",sidebar_position:2},o=void 0,l={},c=[{value:"Permissions",id:"permissions",level:3},{value:"File: CustomMeetingPreview.tsx",id:"file-custommeetingpreviewtsx",level:3}];function u(e){let t={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"A common use case of pre-call UI is to give the user a option to set / edit their name."}),"\n",(0,s.jsx)(t.h3,{id:"permissions",children:"Permissions"}),"\n",(0,s.jsxs)(t.p,{children:["Requires ",(0,s.jsx)(t.code,{children:"meeting.self.permissions.canEditDisplayName"})," to be ",(0,s.jsx)(t.code,{children:"true"})]}),"\n",(0,s.jsxs)(t.p,{children:["In the preset editor, ensure ",(0,s.jsx)(t.code,{children:"Miscellaneous > Edit Name"})," is toggled enabled."]}),"\n",(0,s.jsx)("img",{src:"/static/react/preset-edit-name.png"}),"\n",(0,s.jsx)(t.h3,{id:"file-custommeetingpreviewtsx",children:"File: CustomMeetingPreview.tsx"}),"\n",(0,s.jsxs)(t.p,{children:["We add a ",(0,s.jsx)(t.code,{children:"DyteInputField"})," element for entering the participant name. We should not show this input if the user doese not have permission to edit name (",(0,s.jsx)(t.code,{children:"permissions.canEditDisplayName"}),")"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"await meeting.self.setName(participantName);"})," sets the new name for the participant."]}),"\n",(0,s.jsxs)(t.p,{children:["At the end, we let user join the meeting using ",(0,s.jsx)(t.code,{children:"await meeting.join();"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { useDyteMeeting, useDyteSelector } from '@dytesdk/react-native-core';\nimport { DyteButton, DyteTextField } from '@dytesdk/react-native-ui-kit';\nimport { useState, useEffect } from 'react';\nimport { View } from 'react-native';\n\nexport default function CustomMeetingPreview() {\n  const { meeting } = useDyteMeeting();\n  const permissions = useDyteSelector((m) => m.self.permissions);\n  const [participantName, setParticipantName] = useState('');\n\n  useEffect(() => {\n    if (!meeting) {\n      return;\n    }\n    setParticipantName(meeting.self.name);\n  }, [meeting]);\n\n  return (\n    <View\n      className=\"flex h-full w-full flex-col items-center justify-center\"\n      style={{ minHeight: '400px' }}\n    >\n      <View className=\"flex w-full items-center justify-around p-[10%]\">\n        <View></View>\n        <View className=\"flex w-1/4 flex-col justify-between\">\n          <View className=\"flex flex-col items-center\">\n            <p>Joining as</p>\n          </View>\n          {permissions.canEditDisplayName && (\n            <DyteTextField\n              placeholder=\"Your name\"\n              value={participantName}\n              onChange={(event) => setParticipantName(event.target.value)}\n            />\n          )}\n          <DyteButton\n            kind=\"wide\"\n            size=\"lg\"\n            style={{ cursor: participantName ? 'pointer' : 'not-allowed' }}\n            onClick={async () => {\n              if (participantName) {\n                if (permissions.canEditDisplayName) {\n                  await meeting.self.setName(participantName);\n                }\n                await meeting.join();\n              }\n            }}\n          >\n            Join\n          </DyteButton>\n        </View>\n      </View>\n    </View>\n  );\n}\n"})})]})}function d(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return a}});var i=n(67294);let s={},r=i.createContext(s);function a(e){let t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);