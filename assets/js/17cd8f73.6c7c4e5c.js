"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["65330"],{44753:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>o,metadata:()=>r,assets:()=>d,toc:()=>l,contentTitle:()=>c});var r=JSON.parse('{"id":"local-user/events","title":"Events","description":"Local user events guide.","source":"@site/docs/react-web-core/local-user/events.mdx","sourceDirName":"local-user","slug":"/local-user/events","permalink":"/react-web-core/local-user/events","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"react-web-core","permalink":"/react-web-core/tags/react-web-core"},{"inline":true,"label":"local-user","permalink":"/react-web-core/tags/local-user"},{"inline":true,"label":"self","permalink":"/react-web-core/tags/self"},{"inline":true,"label":"self events","permalink":"/react-web-core/tags/self-events"}],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Events","description":"Local user events guide.","sidebar_position":2,"tags":["react-web-core","local-user","self","self events"]},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/react-web-core/local-user/introduction"},"next":{"title":"Manage Media Devices","permalink":"/react-web-core/local-user/manage-media-devices"}}'),i=s("85893"),t=s("50065"),a=s("23336");let o={title:"Events",description:"Local user events guide.",sidebar_position:2,tags:["react-web-core","local-user","self","self events"]},c="Local User - Events",d={},l=[{value:"Room joined / leave",id:"room-joined--leave",level:2},{value:"Video update",id:"video-update",level:2},{value:"Audio update",id:"audio-update",level:2},{value:"Screenshare update",id:"screenshare-update",level:2},{value:"Device update",id:"device-update",level:2},{value:"Network quality score",id:"network-quality-score",level:2},...a.d$,{value:"Permission Updates",id:"permission-updates",level:2}];function u(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.a)(),...e.components},{Head:s}=n;return!s&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"local-user---events",children:"Local User - Events"})}),"\n",(0,i.jsx)(n.h2,{id:"room-joined--leave",children:"Room joined / leave"}),"\n",(0,i.jsx)(n.p,{children:"Trigger an update when the local user joins / leave a room."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const roomJoined = useDyteSelector((meeting) => meeting.self.roomJoined);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"video-update",children:"Video update"}),"\n",(0,i.jsxs)(n.p,{children:["Triggered when the user starts / stops the video using ",(0,i.jsx)(n.code,{children:"enableVideo"})," or\n",(0,i.jsx)(n.code,{children:"disableVideo"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const videoEnabled = useDyteSelector((meeting) => meeting.self.videoEnabled);\nconst videoTrack = useDyteSelector((meeting) => meeting.self.videoTrack);\n\nuseEffect(() => {\n  const videoElem = document.getElementById('my-video');\n  if (videoEnabled && videoTrack) {\n    const stream = new MediaStream();\n    stream.addTrack(videoTrack);\n    videoElem.srcObject = stream;\n    videoElem.play();\n  }\n}, [videoEnabled, videoTrack]);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"audio-update",children:"Audio update"}),"\n",(0,i.jsxs)(n.p,{children:["Triggered when the user starts / stops the audio using ",(0,i.jsx)(n.code,{children:"enableAudio"})," or\n",(0,i.jsx)(n.code,{children:"disableAudio"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const audioEnabled = useDyteSelector((meeting) => meeting.self.audioEnabled);\nconst audioTrack = useDyteSelector((meeting) => meeting.self.audioTrack);\n\nuseEffect(() => {\n  const audioElem = document.getElementById('my-audio');\n  if (audioEnabled && audioTrack) {\n    const stream = new MediaStream();\n    stream.addTrack(audioTrack);\n    audioElem.srcObject = stream;\n    audioElem.play();\n  }\n}, [audioEnabled, audioTrack]);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"screenshare-update",children:"Screenshare update"}),"\n",(0,i.jsxs)(n.p,{children:["Triggered when the user starts / stops the screen share using\n",(0,i.jsx)(n.code,{children:"enableScreenShare()"})," or ",(0,i.jsx)(n.code,{children:"disableScreenShare()"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const screenShareEnabled = useDyteSelector(\n  (meeting) => meeting.self.screenShareEnabled\n);\nconst screenShareTrack = useDyteSelector(\n  (meeting) => meeting.self.screenShareTrack\n);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"device-update",children:"Device update"}),"\n",(0,i.jsxs)(n.p,{children:["Subscribe to the ",(0,i.jsx)(n.code,{children:"deviceUpdate"})," event to handle the changing video, audio and\nspeaker devices"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"meeting.self.on('deviceUpdate', ({ device }) => {\n  // handle microphone device change\n  if (device.kind === 'audioinput') {\n    console.log('mic change', device);\n  }\n  // handle camera device change\n  if (device.kind === 'videoinput') {\n    console.log('camera change', device);\n  }\n  // handle speaker device change\n  if (device.kind === 'audiooutput') {\n    console.log('speaker change', device);\n  }\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"network-quality-score",children:"Network quality score"}),"\n","\n",(0,i.jsx)(a.ZP,{}),"\n",(0,i.jsx)(n.h2,{id:"permission-updates",children:"Permission Updates"}),"\n",(0,i.jsx)(n.p,{children:"Triggered when permissions are updated dynamically by a privileged user"}),"\n",(0,i.jsxs)(n.p,{children:["Subscribe to ",(0,i.jsx)(n.code,{children:"chatUpdate"}),", ",(0,i.jsx)(n.code,{children:"pollsUpdate"}),", ",(0,i.jsx)(n.code,{children:"pluginsUpdate"})," or ",(0,i.jsx)(n.code,{children:"*"})," for any kind of permission updates\nExample:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"meeting.self.permissions.on('chatUpdate', () => {\n  // Chat permissions are updated\n  // check meeting.self.permissions for updated permissions\n});\n"})}),"\n",(0,i.jsx)(s,{children:(0,i.jsx)("title",{children:"React Web Core Events"})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},23336:function(e,n,s){s.d(n,{ZP:function(){return o},d$:function(){return t}});var r=s(85893),i=s(50065);let t=[];function a(e){let n={code:"code",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Subscribe to the ",(0,r.jsx)(n.code,{children:"mediaScoreUpdate"})," event to monitor network"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"meeting.self.on('mediaScoreUpdate', ({ kind, isScreenshare, score, scoreStats }) => {\n  if (kind === 'video') {\n    console.log(\n      `Your ${isScreenshare ? 'screenshare' : 'video'} quality score is `,\n      score\n    );\n  }\n\n  if (kind === 'audio') {\n    console.log('Your audio quality score is ', score);\n  }\n\n  if (score < 5) {\n    console.log('Your media quality is poor');\n  }\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"scoreStats"})," object contains the statistics that contributed to the calculated media score."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"mediaScoreUpdate"})," event will be emitted with an object similar to the following example as its first parameter, every few seconds, if media is being shared."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'// Audio Producer\n{\n    "kind": "audio",\n    "isScreenshare": false,\n    "score": 10,\n    "participantId": "c8aa91f6-0316-4025-8240-80d130e5acca", // meeting.self.id\n    "scoreStats": {\n        "score": 10,\n        "bitrate": 22452, // bytes per second\n        "packetsLostPercentage": 0,\n        "jitter": 0, // seconds\n        "isScreenShare": false\n    }\n}\n\n// Video Producer\n{\n    "kind": "video",\n    "isScreenshare": false,\n    "score": 10,\n    "participantId": "c8aa91f6-0316-4025-8240-80d130e5acca", // meeting.self.id\n    "scoreStats": {\n        "score": 10,\n        "frameWidth": 640,\n        "frameHeight": 480,\n        "framesPerSecond": 24,\n        "jitter": 0, // seconds\n        "isScreenShare": false,\n        "packetsLostPercentage": 0,\n        "bitrate": 576195, // bytes per second\n        "cpuLimitations": false,\n        "bandwidthLimitations": false\n    }\n}\n'})})]})}function o(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return a}});var r=s(67294);let i={},t=r.createContext(i);function a(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);