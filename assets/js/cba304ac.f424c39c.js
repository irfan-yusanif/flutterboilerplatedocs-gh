"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["2357"],{99037:function(e,t,n){n.r(t),n.d(t,{default:()=>d,frontMatter:()=>r,metadata:()=>o,assets:()=>l,toc:()=>u,contentTitle:()=>s});var o=JSON.parse('{"id":"build-in-call-ui/build-your-own/customize-control-bar","title":"Customize Control Bar","description":"Source Code//github.com/dyte-io/react-native-samples/tree/main/samples/createyourown_ui","source":"@site/docs/rn-ui-kit/build-in-call-ui/build-your-own/customize-control-bar.mdx","sourceDirName":"build-in-call-ui/build-your-own","slug":"/build-in-call-ui/build-your-own/customize-control-bar","permalink":"/flutterboilerplatedocs/react-native/build-in-call-ui/build-your-own/customize-control-bar","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Customize Control Bar","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Customize Header","permalink":"/flutterboilerplatedocs/react-native/build-in-call-ui/build-your-own/customize-header"},"next":{"title":"Add custom sidebar","permalink":"/flutterboilerplatedocs/react-native/build-in-call-ui/build-your-own/add-custom-sidebar"}}'),i=n("85893"),a=n("50065");let r={title:"Customize Control Bar",sidebar_position:4},s=void 0,l={},u=[];function c(e){let t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Source Code: ",(0,i.jsx)(t.a,{href:"https://github.com/dyte-io/react-native-samples/tree/main/samples/create_your_own_ui",children:"https://github.com/dyte-io/react-native-samples/tree/main/samples/create_your_own_ui"})]}),"\n",(0,i.jsxs)(t.p,{children:["Dyte's default header component ",(0,i.jsx)(t.code,{children:"DyteControlbar"})," can be used as the following."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:"<DyteControlbar meeting={meeting} />\n"})}),"\n",(0,i.jsx)(t.p,{children:"Following code shows you can customise the DyteControlbar as per your use case."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-tsx",children:'import React from \'react\';\nimport {\n  DyteCameraToggle,\n  DyteChatToggle,\n  DyteControlbar,\n  DyteControlbarButton,\n  DyteLeaveButton,\n  DyteMicToggle,\n  DyteMoreToggle,\n  DyteMuteToggle,\n  DytePluginsToggle,\n  DytePollsToggle,\n  DyteRecordingToggle,\n  DyteScreenShareToggle,\n  DyteSettingsToggle,\n  useLanguage,\n} from \'@dytesdk/react-native-ui-kit\';\nimport { UIConfig, defaultIconPack } from \'@dytesdk/react-native-ui-kit\';\nimport DyteClient from \'@dytesdk/web-core\';\nimport { CustomStates, SetStates } from \'../types\';\nimport { View } from \'react-native\';\n\nfunction ControlBarWithCustomUI({\n  meeting,\n  states,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  config,\n  setStates,\n}: {\n  meeting: DyteClient;\n  config: UIConfig;\n  states: CustomStates;\n  setStates: SetStates;\n}) {\n  const t = useLanguage();\n  return (\n    <>\n      {states.activeMoreMenu && (\n        <View className="absolute bottom-[60px] w-full">\n          <DyteMuteToggle meeting={meeting} />\n          <DyteRecordingToggle meeting={meeting} variant="horizontal" />\n          <DyteScreenShareToggle meeting={meeting} variant="horizontal" />\n          <DyteChatToggle\n            meeting={meeting}\n            states={states}\n            variant="horizontal"\n          />\n          <DytePollsToggle\n            meeting={meeting}\n            states={states}\n            variant="horizontal"\n          />\n          <DytePluginsToggle\n            meeting={meeting}\n            states={states}\n            t={t}\n            variant="horizontal"\n          />\n          <DyteSettingsToggle states={states} variant="horizontal" />\n          <DyteControlbarButton\n            variant="horizontal"\n            onClick={() => {\n              if (\n                states.activeSidebar &&\n                !states.sidebar &&\n                states.customSidebar === \'warnings\'\n              ) {\n                setStates((oldState) => {\n                  return {\n                    ...oldState,\n                    activeSidebar: false,\n                    sidebar: null,\n                    customSidebar: null,\n                  };\n                });\n              } else {\n                setStates((oldState) => {\n                  return {\n                    ...oldState,\n                    activeSidebar: true,\n                    sidebar: null,\n                    customSidebar: \'warnings\',\n                  };\n                });\n              }\n            }}\n            icon={defaultIconPack.add}\n            label={\'Open Custom SideBar\'}\n          />\n        </View>\n      )}\n      <View className="flex-row justify-evenly bg-black text-white">\n        <DyteMicToggle meeting={meeting} variant="horizontal" />\n        <DyteCameraToggle meeting={meeting} variant="horizontal" />\n        <DyteMoreToggle\n          iconPack={defaultIconPack}\n          variant="horizontal"\n          t={useLanguage()}\n        />\n        <DyteLeaveButton t={t} />\n      </View>\n    </>\n  );\n}\n'})})]})}function d(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return r}});var o=n(67294);let i={},a=o.createContext(i);function r(e){let t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);