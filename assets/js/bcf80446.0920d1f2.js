"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["31093"],{71266:function(e,n,t){t.r(n),t.d(n,{default:()=>c,frontMatter:()=>s,metadata:()=>i,assets:()=>a,toc:()=>d,contentTitle:()=>r});var i=JSON.parse('{"id":"plugins/extra","title":"Other methods","description":"Methods on a plugin in a meeting.","source":"@site/docs/ios-core/plugins/extra.mdx","sourceDirName":"plugins","slug":"/plugins/extra","permalink":"/flutterboilerplatedocs/ios-core/plugins/extra","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"ios-core","permalink":"/flutterboilerplatedocs/ios-core/tags/ios-core"},{"inline":true,"label":"plugins","permalink":"/flutterboilerplatedocs/ios-core/tags/plugins"}],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Other methods","description":"Methods on a plugin in a meeting.","sidebar_position":4,"tags":["ios-core","plugins"]},"sidebar":"tutorialSidebar","previous":{"title":"Functions to disable plugins","permalink":"/flutterboilerplatedocs/ios-core/plugins/disable-plugin"},"next":{"title":"Recording","permalink":"/flutterboilerplatedocs/ios-core/recording"}}'),o=t("85893"),l=t("50065");let s={title:"Other methods",description:"Methods on a plugin in a meeting.",sidebar_position:4,tags:["ios-core","plugins"]},r=void 0,a={},d=[{value:"Send data to the plugin",id:"send-data-to-the-plugin",level:2},{value:"Receive data from the plugin",id:"receive-data-from-the-plugin",level:2}];function u(e){let n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.a)(),...e.components},{Head:t}=n;return!t&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"send-data-to-the-plugin",children:"Send data to the plugin"}),"\n",(0,o.jsxs)(n.p,{children:["You can send data (type ",(0,o.jsx)(n.code,{children:"any"}),") to a plugin using the ",(0,o.jsx)(n.code,{children:"sendData()"})," method. This method comes in handy when building your own plugin."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-swift",children:'let pluginId = "..."\nif let plugin = meeting.plugins.active.first(where: { $0.id == pluginId }) {\n    plugin.sendData(eventName: "my-custom-event", data: "Hello world")\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"receive-data-from-the-plugin",children:"Receive data from the plugin"}),"\n",(0,o.jsxs)(n.p,{children:["You can receive data from a plugin by implementing the methods defined in ",(0,o.jsx)(n.code,{children:"DytePluginEventsListener"})," interface.\nThis method comes in handy when building your own plugin. Listen Plugin events\nusing ",(0,o.jsx)(n.code,{children:"meeting.addPluginEventsListener(meetingViewModel)"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-swift",children:"extension MeetingViewModel: DytePluginEventsListener {\n  func onPluginActivated(plugin: DytePlugin) {\n    ...\n  }\n\n  func onPluginDeactivated(plugin: DytePlugin) {\n    ...\n  }\n\n  func onPluginMessage(plugin: DytePlugin, eventName: String, data: Any?) {\n    ...\n  }\n\n  func onPluginFileRequest(plugin: DytePlugin) {\n    ...\n  }\n}\n"})}),"\n",(0,o.jsx)(t,{children:(0,o.jsx)("title",{children:"iOS Core extra plugins Function"})})]})}function c(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return s}});var i=t(67294);let o={},l=i.createContext(o);function s(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);