"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["16851"],{3850:function(e,n,r){r.r(n),r.d(n,{default:()=>h,frontMatter:()=>t,metadata:()=>i,assets:()=>o,toc:()=>l,contentTitle:()=>s});var i=JSON.parse('{"id":"recording","title":"Recording","description":"Control recordings in a meeting.","source":"@site/docs/web-core/recording.mdx","sourceDirName":".","slug":"/recording","permalink":"/flutterboilerplatedocs/web-core/recording","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"web-core","permalink":"/flutterboilerplatedocs/web-core/tags/web-core"},{"inline":true,"label":"recording","permalink":"/flutterboilerplatedocs/web-core/tags/recording"}],"version":"current","sidebarPosition":9,"frontMatter":{"title":"Recording","description":"Control recordings in a meeting.","sidebar_position":9,"tags":["web-core","recording"]},"sidebar":"tutorialSidebar","previous":{"title":"Other methods","permalink":"/flutterboilerplatedocs/web-core/plugins/extra"},"next":{"title":"Stage Management","permalink":"/flutterboilerplatedocs/web-core/stage"}}'),c=r("85893"),d=r("50065");let t={title:"Recording",description:"Control recordings in a meeting.",sidebar_position:9,tags:["web-core","recording"]},s="Recording",o={},l=[{value:"List recordings",id:"list-recordings",level:2},{value:"Start a recording",id:"start-a-recording",level:2},{value:"Stop a recording",id:"stop-a-recording",level:2},{value:"Pause a recording",id:"pause-a-recording",level:2},{value:"Resume a recording",id:"resume-a-recording",level:2},{value:"Recording Configuration",id:"recording-configuration",level:2},{value:"videoConfig",id:"videoconfig",level:4},{value:"fileNamePrefix",id:"filenameprefix",level:4},{value:"Check active recording state",id:"check-active-recording-state",level:2}];function a(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components},{Head:r}=n;return!r&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"recording",children:"Recording"})}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"meeting.recording"})," object can be used start and stop recordings in a\nmeeting. You can also get the current status of a recording using this API."]}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"meeting.recording"})," object has the following properties:"]}),"\n",(0,c.jsx)(n.h2,{id:"list-recordings",children:"List recordings"}),"\n",(0,c.jsx)(n.p,{children:"Retrieve a list of active recordings along with their current status."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"const recordings = meeting.recording.recordings;\n"})}),"\n",(0,c.jsx)(n.p,{children:"it returns list of recording ids and their state"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"[\n  {\n    id: '<recording-id>',\n    state: '<recording-state>',\n  },\n];\n"})}),"\n",(0,c.jsxs)(n.p,{children:["The recording states include ",(0,c.jsx)(n.code,{children:"IDLE"}),", ",(0,c.jsx)(n.code,{children:"STARTING"}),", ",(0,c.jsx)(n.code,{children:"RECORDING"}),", ",(0,c.jsx)(n.code,{children:"PAUSED"}),", and ",(0,c.jsx)(n.code,{children:"STOPPING"}),"."]}),"\n",(0,c.jsx)(n.h2,{id:"start-a-recording",children:"Start a recording"}),"\n",(0,c.jsx)(n.p,{children:"Initiate a recording using the start method."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.start();\n"})}),"\n",(0,c.jsxs)(n.p,{children:["To enable multiple parallel recordings, the first recording must be started with the option ",(0,c.jsx)(n.code,{children:"{ allowMultiple: true }"}),"."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.start({ allowMultiple: true });\n"})}),"\n",(0,c.jsx)(n.p,{children:"Subsequent recordings can then be initiated while the first is still running."}),"\n",(0,c.jsx)(n.h2,{id:"stop-a-recording",children:"Stop a recording"}),"\n",(0,c.jsx)(n.p,{children:"End an active recording with the stop method."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.stop();\n"})}),"\n",(0,c.jsx)(n.p,{children:"To stop a specific recording, provide the recording ID:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.stop(recordingId);\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Omitting the recording ID will stop all recordings in ",(0,c.jsx)(n.code,{children:"RECORDING"})," or ",(0,c.jsx)(n.code,{children:"PAUSED"})," state."]}),"\n",(0,c.jsx)(n.h2,{id:"pause-a-recording",children:"Pause a recording"}),"\n",(0,c.jsx)(n.p,{children:"Temporarily halt a recording using the pause method."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.pause();\n"})}),"\n",(0,c.jsx)(n.p,{children:"To pause a specific recording, include the recording ID:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.pause(recordingId);\n"})}),"\n",(0,c.jsxs)(n.p,{children:["Without a recording ID, all recordings in the ",(0,c.jsx)(n.code,{children:"RECORDING"})," state will be paused."]}),"\n",(0,c.jsx)(n.h2,{id:"resume-a-recording",children:"Resume a recording"}),"\n",(0,c.jsx)(n.p,{children:"Restart a paused recording with the resume method."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.resume();\n"})}),"\n",(0,c.jsx)(n.p,{children:"For resuming a specific recording, pass the recording ID:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"await meeting.recording.resume(recordingId);\n"})}),"\n",(0,c.jsxs)(n.p,{children:["If no recording ID is specified, all recordings in the ",(0,c.jsx)(n.code,{children:"PAUSED"})," state will be resumed."]}),"\n",(0,c.jsx)(n.h2,{id:"recording-configuration",children:"Recording Configuration"}),"\n",(0,c.jsx)(n.p,{children:"You can set the defaults for recording during initialization"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-js",children:"const meeting = await DyteClient.init({\n  authToken,\n  defaults: {\n    recording: recordingConfig,\n  },\n});\n"})}),"\n",(0,c.jsx)(n.p,{children:"In recording config you can specify height, width and codec of the recording output. You can also customize the recording file name prefix."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"interface RecordingConfig {\n  videoConfig?: {\n    height?: number;\n    width?: number;\n    codec?: 'H264' | 'VP8';\n  };\n  fileNamePrefix?: string;\n}\n"})}),"\n",(0,c.jsx)(n.h4,{id:"videoconfig",children:"videoConfig"}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"codec"})," - Codec using which the recording will be encoded. ",(0,c.jsx)(n.code,{children:"H264"})," will use a ",(0,c.jsx)(n.code,{children:"mp4"})," container, ",(0,c.jsx)(n.code,{children:"VP8"})," will use a ",(0,c.jsx)(n.code,{children:"webm"})," container"]}),"\n",(0,c.jsxs)(n.p,{children:["Allowed values: ",(0,c.jsx)(n.code,{children:"H264"})," | ",(0,c.jsx)(n.code,{children:"VP8"})]}),"\n",(0,c.jsxs)(n.p,{children:["Default: ",(0,c.jsx)(n.code,{children:"H264"})]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"width"})," - Width of the recording video in pixels\nAllowed values: 1 >= width <= 1920"]}),"\n",(0,c.jsxs)(n.p,{children:["Default: ",(0,c.jsx)(n.code,{children:"1280"})]}),"\n"]}),"\n",(0,c.jsxs)(n.li,{children:["\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"height"})," - Height of the recording video in pixels\nAllowed values: 1 >= height <= 1920"]}),"\n",(0,c.jsxs)(n.p,{children:["Default: ",(0,c.jsx)(n.code,{children:"720"})]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(n.h4,{id:"filenameprefix",children:"fileNamePrefix"}),"\n",(0,c.jsxs)(n.p,{children:["You can customize the file name generated by Dyte recorder. All recordings for the meeting will start with the prefix provided here.\nIt is equivalent of ",(0,c.jsx)(n.code,{children:"file_name_prefix"})," in our ",(0,c.jsx)(n.a,{href:"https://docs.dyte.io/api#/",children:"start recording API"})]}),"\n",(0,c.jsx)(n.h2,{id:"check-active-recording-state",children:"Check active recording state"}),"\n",(0,c.jsxs)(n.p,{children:["The ",(0,c.jsx)(n.code,{children:"meeting.recording.recordingState"})," property describes the current state of\nthe recording. The valid states are ",(0,c.jsx)(n.code,{children:"IDLE"}),", ",(0,c.jsx)(n.code,{children:"STARTING"}),", ",(0,c.jsx)(n.code,{children:"RECORDING"}),", ",(0,c.jsx)(n.code,{children:"PAUSED"})," and\n",(0,c.jsx)(n.code,{children:"STOPPING"}),"."]}),"\n",(0,c.jsx)(r,{children:(0,c.jsx)("title",{children:"Web Core Recording"})})]})}function h(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},50065:function(e,n,r){r.d(n,{Z:function(){return s},a:function(){return t}});var i=r(67294);let c={},d=i.createContext(c);function t(e){let n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:t(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);