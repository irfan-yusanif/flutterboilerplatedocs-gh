"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["42305"],{58950:function(e,n,i){i.r(n),i.d(n,{default:()=>u,frontMatter:()=>t,metadata:()=>a,assets:()=>c,toc:()=>l,contentTitle:()=>d});var a=JSON.parse('{"id":"advanced/advance","title":"Advance","description":"Defaults Configuration","source":"@site/docs/react-web-core/advanced/advance.mdx","sourceDirName":"advanced","slug":"/advanced/advance","permalink":"/flutterboilerplatedocs/react-web-core/advanced/advance","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Advance","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/flutterboilerplatedocs/react-web-core/introduction"},"next":{"title":"Introduction","permalink":"/flutterboilerplatedocs/react-web-core/local-user/introduction"}}'),o=i("85893"),r=i("50065");let t={title:"Advance",sidebar_position:1},d=void 0,c={},l=[{value:"Defaults Configuration",id:"defaults-configuration",level:2},{value:"audio",id:"audio",level:3},{value:"video",id:"video",level:3},{value:"screenShare.displaySurface",id:"screensharedisplaysurface",level:3},{value:"mediaConfiguration",id:"mediaconfiguration",level:3},{value:"isNonPreferredDevice",id:"isnonpreferreddevice",level:3},{value:"autoSwitchAudioDevice",id:"autoswitchaudiodevice",level:3},{value:"recording",id:"recording",level:3}];function s(e){let n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components},{Head:i}=n;return!i&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"defaults-configuration",children:"Defaults Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"await DyteClient.init({\n  defaults: {\n    ...\n  }\n})\n"})}),"\n",(0,o.jsx)(n.p,{children:"While initializing DyteClient you can pass configuration overrides, the available options are"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"type DefaultOptions {\n	video?: boolean;\n	audio?: boolean;\n	screenShare?: {\n		displaySurface?: 'window' | 'monitor' | 'browser';\n	};\n	mediaConfiguration?: {\n		video?: VideoQualityConstraints,\n		audio?: AudioQualityConstraints,\n	}\n	isNonPreferredDevice?: (device: MediaDeviceInfo) => boolean;\n	/**\n	 * If true, will automatically switch audio input and output device\n	 * to a new device connected mid call. (In case of disconnection switch\n	 * will happen automatically in both cases)\n	 */\n	autoSwitchAudioDevice?: boolean;\n	recording?: RecordingConfig;\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"audio",children:"audio"}),"\n",(0,o.jsx)(n.p,{children:"This optional propery is true by default and defines whether audioTrack would be acquired and enabled on SDK initialization"}),"\n",(0,o.jsx)(n.h3,{id:"video",children:"video"}),"\n",(0,o.jsx)(n.p,{children:"This optional propery is true by default and defines whether videoTrack would be acquired and enabled on SDK initialization"}),"\n",(0,o.jsx)(n.h3,{id:"screensharedisplaysurface",children:"screenShare.displaySurface"}),"\n",(0,o.jsxs)(n.p,{children:["Specifies the ",(0,o.jsx)(n.em,{children:"preferred"})," screenshare surface, user will still be shown all possible options but the one configured here will be preselected"]}),"\n",(0,o.jsx)(n.h3,{id:"mediaconfiguration",children:"mediaConfiguration"}),"\n",(0,o.jsx)(n.p,{children:"Defines media quality configuration"}),"\n",(0,o.jsx)(n.p,{children:"For audio -"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"{\n	echoCancellation?: boolean, // default true\n	noiseSupression?: boolean, // default true\n	autoGainControl?: boolean, // default true\n	enableStereo?: boolean, // default false\n	enableHighBitrate?: boolean // default false\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"For applications where audio quality needs to be high and as loseless as possible"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"{\n	echoCancellation: false,\n	noiseSupression: false,\n	autoGainControl: false,\n	enableStereo: true,\n	enableHighBitrate: true,\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"For video -"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"{\n	width: { ideal: number },\n	height: { ideal: number },\n	frameRate?: { ideal: number },\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"isnonpreferreddevice",children:"isNonPreferredDevice"}),"\n",(0,o.jsx)(n.p,{children:"Our SDK will acquire media devices preferring virtual devices to not be selected by default (OBS, iPhone continuity)\nYou can override this logic by using your own function to decide the preference"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'defaults: {\n  ...\n  isNonPreferredDevice: (device: MediaDeviceInfo) => {\n    if(device.label.startsWith("Virtual")) {\n      return false\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"autoswitchaudiodevice",children:"autoSwitchAudioDevice"}),"\n",(0,o.jsx)(n.p,{children:"By default, when a new audio device is plugged in our SDK switches to that device. You can configure that behaviour"}),"\n",(0,o.jsx)(n.h3,{id:"recording",children:"recording"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"{\n	fileNamePrefix?: string;\n	videoConfig?: {\n		height?: number;\n		width?: number;\n		codec?: string;\n	};\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Refer to ",(0,o.jsx)(n.a,{href:"/guides/capabilities/recording/configure-codecs#configure-codecs",children:"recording codec guide"})," for info the ",(0,o.jsx)(n.code,{children:"codec"})," parameter"]}),"\n",(0,o.jsx)(i,{children:(0,o.jsx)("title",{children:"React Web Core Advance"})})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return d},a:function(){return t}});var a=i(67294);let o={},r=a.createContext(o);function t(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);