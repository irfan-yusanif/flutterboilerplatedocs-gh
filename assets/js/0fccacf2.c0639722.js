"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["49391"],{92622:function(e,t,n){n.r(t),n.d(t,{default:()=>p,frontMatter:()=>s,metadata:()=>i,assets:()=>c,toc:()=>d,contentTitle:()=>r});var i=JSON.parse('{"id":"basics/pre-requisite","title":"Prerequisite","description":"Make sure to read this before you start integrating the UI Kit into your app.","source":"@site/docs/ui-kit/basics/pre-requisite.mdx","sourceDirName":"basics","slug":"/basics/pre-requisite","permalink":"/ui-kit/basics/pre-requisite","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Components Basics","permalink":"/ui-kit/basics/components-basics"},"next":{"title":"Gallery","permalink":"/ui-kit/components"}}'),o=n("85893"),a=n("50065");let s={sidebar_position:5},r="Prerequisite",c={},d=[{value:"DyteParticipantsAudio",id:"dyteparticipantsaudio",level:3},{value:"DyteNotifications",id:"dytenotifications",level:3},{value:"DyteDialogManager",id:"dytedialogmanager",level:3}];function l(e){let t={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components},{Head:n}=t;return!n&&function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"prerequisite",children:"Prerequisite"})}),"\n",(0,o.jsx)(t.p,{children:"Make sure to read this before you start integrating the UI Kit into your app."}),"\n",(0,o.jsx)(t.p,{children:"These are a couple of components that are important for proper functioning of a\nmeeting."}),"\n",(0,o.jsx)(t.h3,{id:"dyteparticipantsaudio",children:"DyteParticipantsAudio"}),"\n",(0,o.jsx)(t.p,{children:"This component takes care of the audio playback and autoplay issues."}),"\n",(0,o.jsx)(t.admonition,{title:"Audio",type:"danger",children:(0,o.jsx)(t.p,{children:"The user will not hear audio without this component."})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:"<dyte-participants-audio id=\"my-audio\"></dyte-participants-audio>\n\n<script>\n  document.getElementById('my-audio').meeting = meeting;\n<\/script>\n"})}),"\n",(0,o.jsx)(t.p,{children:"This component will also show a dialog in case the browser throws an auto play\nerror, requiring user interaction to allow playing audio."}),"\n",(0,o.jsxs)(t.p,{children:["Here is more information on\n",(0,o.jsx)(t.a,{href:"https://developer.chrome.com/blog/autoplay/",children:"Autoplay policy in Chrome"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"Other browsers have similar policy, with some minor differences."}),"\n",(0,o.jsx)(t.h3,{id:"dytenotifications",children:"DyteNotifications"}),"\n",(0,o.jsx)(t.admonition,{title:"Notifications",type:"danger",children:(0,o.jsx)(t.p,{children:"The user will not be notified of important events such as network disconnection,\npoor network without this component."})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:"<dyte-notifications id=\"my-notifications\"></dyte-notifications>\n\n<script>\n  // load meeting\n\n  document.getElementById('my-notifications').meeting = meeting;\n  document.getElementById('my-notifications').config = {\n    // which notifications to show\n    notifications: ['chat', 'participant_joined', 'participant_left'],\n    // which notifications should have sounds\n    notification_sounds: ['chat', 'participant_joined', 'participant_left'],\n    // maximum number of participant joined sound notifications\n    participant_joined_sound_notification_limit: 10,\n    // maximum number of chat message sound notifications\n    participant_chat_message_sound_notification_limit: 10,\n  };\n<\/script>\n"})}),"\n",(0,o.jsx)(t.h3,{id:"dytedialogmanager",children:"DyteDialogManager"}),"\n",(0,o.jsx)(t.p,{children:"A component which handles all dialog elements in a component. This component is required for the following components to work:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"DyteLeaveButton"}),"\n",(0,o.jsx)(t.li,{children:"DyteSettingsToggle"}),"\n",(0,o.jsx)(t.li,{children:"DyteBreakoutRoomsToggle"}),"\n",(0,o.jsx)(t.li,{children:"DyteMuteAllButton"}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["This components depends on the values from ",(0,o.jsx)(t.code,{children:"states"})," object."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'<dyte-notifications id="my-notifications"></dyte-notifications>\n\n<script>\n  <dyte-button onclick="showSettings()">Show Settings</dyte-button>\n  <dyte-button onclick="showLeaveConfirmation()">Show Settings</dyte-button>\n\n  <dyte-dialog-manager id="dyte-el"></dyte-dialog-manager>\n\n  <script>\n    const dialog = document.getElementById(\'dyte-el\');\n    dialog.meeting = meeting;\n    let states = {};\n\n    function updateStates() {\n      dialog.states = states;\n    }\n\n    function stateUpdate(s) {\n      states = { ...states, ...s };\n      updateStates();\n    }\n\n    function showSettings() {\n      stateUpdate({ activeSettings: true });\n    }\n\n    function showLeaveConfirmation() {\n      stateUpdate({ activeLeaveConfirmation: true });\n    }\n\n    dialog.addEventListener(\'dyteStateUpdate\', (e) => {\n      stateUpdate(e.detail);\n    });\n\n    updateStates();\n<\/script>\n'})}),"\n",(0,o.jsx)(n,{children:(0,o.jsx)("title",{children:"UI Kit Prerequisite"})})]})}function p(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return r},a:function(){return s}});var i=n(67294);let o={},a=i.createContext(o);function s(e){let t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);