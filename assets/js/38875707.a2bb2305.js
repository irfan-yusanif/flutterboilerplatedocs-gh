"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["90935"],{26522:function(e,n,i){i.r(n),i.d(n,{default:()=>u,frontMatter:()=>l,metadata:()=>a,assets:()=>o,toc:()=>d,contentTitle:()=>r});var a=JSON.parse('{"id":"local-user/events","title":"Events","description":"Understand and manage local user events in your Android application with Dyte\'s documentation on Local User Events.","source":"@site/docs/android-core/local-user/events.mdx","sourceDirName":"local-user","slug":"/local-user/events","permalink":"/android-core/local-user/events","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"android-core","permalink":"/android-core/tags/android-core"},{"inline":true,"label":"local-user","permalink":"/android-core/tags/local-user"},{"inline":true,"label":"self","permalink":"/android-core/tags/self"}],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Events","description":"Understand and manage local user events in your Android application with Dyte\'s documentation on Local User Events.","sidebar_position":2,"tags":["android-core","local-user","self"]},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/android-core/local-user/introduction"},"next":{"title":"Manage Media Devices","permalink":"/android-core/local-user/manage-media-devices"}}'),t=i("85893"),s=i("50065");let l={title:"Events",description:"Understand and manage local user events in your Android application with Dyte's documentation on Local User Events.",sidebar_position:2,tags:["android-core","local-user","self"]},r=void 0,o={},d=[{value:"Local User - Events",id:"local-user---events",level:2},{value:"Video update",id:"video-update",level:3},{value:"Audio update",id:"audio-update",level:3},{value:"Waitlist status",id:"waitlist-status",level:3},{value:"Screenshare callbacks for local user",id:"screenshare-callbacks-for-local-user",level:3},{value:"Device permission callbacks once local user is joined in the meeting",id:"device-permission-callbacks-once-local-user-is-joined-in-the-meeting",level:3},{value:"When local user is kicked out from the meeting by a remote user",id:"when-local-user-is-kicked-out-from-the-meeting-by-a-remote-user",level:3}];function c(e){let n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components},{TabItem:i,Tabs:a}=n;return!i&&h("TabItem",!0),!a&&h("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"local-user---events",children:"Local User - Events"}),"\n",(0,t.jsxs)(n.p,{children:["You can subscribe to various events on the local user by implementing ",(0,t.jsx)(n.code,{children:"DyteSelfEventsListener"})," and passing the object to ",(0,t.jsx)(n.code,{children:"meeting.addSelfEventsListener(dyteSelfEventsListener)"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"video-update",children:"Video update"}),"\n",(0,t.jsxs)(n.p,{children:["Triggered when the user starts/stops the video using ",(0,t.jsx)(n.code,{children:"enableVideo()"})," or\n",(0,t.jsx)(n.code,{children:"disableVideo()"}),"."]}),"\n",(0,t.jsxs)(a,{groupId:"android-core-local-user",children:[(0,t.jsx)(i,{value:"kotlin",label:"Kotlin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addSelfEventsListener(object : DyteSelfEventsListener {\n    override fun onVideoUpdate(isEnabled: Boolean) {\n      if (isEnabled) {\n        // video is enabled, and other participants in room can see local user\n      } else {\n        // video is disabled, and other participants in room can not see local user.\n      }\n    }\n})\n"})})}),(0,t.jsx)(i,{value:"java",label:"Java",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"meeting.addSelfEventsListener(new DyteSelfEventsListener() {\n    @Override\n    public void onVideoUpdate(boolean isEnabled) {\n      if (isEnabled) {\n        // video is enabled, and other participants in room can see local user\n      } else {\n        // video is disabled, and other participants in room can not see local user.\n      }\n    }\n});\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"audio-update",children:"Audio update"}),"\n",(0,t.jsxs)(n.p,{children:["Triggered when the user starts/stops the audio using ",(0,t.jsx)(n.code,{children:"enableAudio()"})," or\n",(0,t.jsx)(n.code,{children:"disableAudio()"}),"."]}),"\n",(0,t.jsxs)(a,{groupId:"android-core-local-user",children:[(0,t.jsx)(i,{value:"kotlin",label:"Kotlin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addSelfEventsListener(object : DyteSelfEventsListener {\n    override fun onAudioUpdate(isEnabled: Boolean) {\n      if (isEnabled) {\n        // audio is enabled, and other participants in room can hear local user\n      } else {\n        // audio is disabled, and other participants in room can not hear local user.\n      }\n    }\n})\n"})})}),(0,t.jsx)(i,{value:"java",label:"Java",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"meeting.addSelfEventsListener(new DyteSelfEventsListener() {\n    override fun onAudioUpdate(boolean isEnabled) {\n      if (isEnabled) {\n        // audio is enabled, and other participants in room can hear local user\n      } else {\n        // audio is disabled, and other participants in room can not hear local user.\n      }\n    }\n});\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"waitlist-status",children:"Waitlist status"}),"\n",(0,t.jsx)(n.p,{children:"For meetings whose waiting room is enabled:"}),"\n",(0,t.jsx)(n.p,{children:"To get status of localUser in waiting room we can use"}),"\n",(0,t.jsxs)(a,{groupId:"android-core-local-user",children:[(0,t.jsx)(i,{value:"kotlin",label:"Kotlin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"val waitListStatus = meeting.localUser.waitListStatus\n"})})}),(0,t.jsx)(i,{value:"java",label:"Java",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"WaitListStatus waitListStatus = meeting.localUser.getWaitListStatus();\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["You can listen to those changes in ",(0,t.jsx)(n.code,{children:"onWaitListStatusUpdate()"})," callbacks"]}),"\n",(0,t.jsxs)(a,{groupId:"android-core-local-user",children:[(0,t.jsx)(i,{value:"kotlin",label:"Kotlin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addSelfEventsListener(object : DyteSelfEventsListener {\n    override fun onWaitListStatusUpdate(waitListStatus: WaitListStatus) {\n      // handle waitlist status here\n    }\n})\n"})})}),(0,t.jsx)(i,{value:"java",label:"Java",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"meeting.addSelfEventsListener(new DyteSelfEventsListener() {\n    @Override\n    public void onWaitListStatusUpdate(WaitListStatus waitListStatus) {\n      // handle waitlist status here\n    }\n});\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"screenshare-callbacks-for-local-user",children:"Screenshare callbacks for local user"}),"\n",(0,t.jsxs)(a,{groupId:"android-core-local-user",children:[(0,t.jsx)(i,{value:"kotlin",label:"Kotlin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addSelfEventsListener(object : DyteSelfEventsListener {\n    override fun onScreenShareStartFailed(reason: String) {\n    }\n\n    override fun onScreenShareUpdate(isEnabled: Boolean) {\n    }\n})\n"})})}),(0,t.jsx)(i,{value:"java",label:"Java",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"meeting.addSelfEventsListener(new DyteSelfEventsListener() {\n    @Override\n    public void onScreenShareStartFailed(@NonNull String reason) {\n    }\n\n    @Override\n    public void onScreenShareUpdate(boolean isEnabled) {\n    }\n});\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"device-permission-callbacks-once-local-user-is-joined-in-the-meeting",children:"Device permission callbacks once local user is joined in the meeting"}),"\n",(0,t.jsxs)(a,{groupId:"android-core-local-user",children:[(0,t.jsx)(i,{value:"kotlin",label:"Kotlin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addSelfEventsListener(object : DyteSelfEventsListener {\n    override fun onMeetingRoomJoinedWithoutCameraPermission() {\n    }\n\n    override fun onMeetingRoomJoinedWithoutMicPermission() {\n    }\n})\n"})})}),(0,t.jsx)(i,{value:"java",label:"Java",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addSelfEventsListener(new DyteSelfEventsListener() {\n    @Override\n    public void onMeetingRoomJoinedWithoutCameraPermission() {\n    }\n\n    @Override\n    public void onMeetingRoomJoinedWithoutMicPermission() {\n    }\n});\n"})})})]}),"\n",(0,t.jsx)(n.h3,{id:"when-local-user-is-kicked-out-from-the-meeting-by-a-remote-user",children:"When local user is kicked out from the meeting by a remote user"}),"\n",(0,t.jsxs)(a,{groupId:"android-core-local-user",children:[(0,t.jsx)(i,{value:"kotlin",label:"Kotlin",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addSelfEventsListener(object : DyteSelfEventsListener {\n    override fun onRemovedFromMeeting() {\n    }\n});\n"})})}),(0,t.jsx)(i,{value:"java",label:"Java",default:!0,children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"meeting.addSelfEventsListener(new DyteSelfEventsListener() {\n    @Override\n    public void onRemovedFromMeeting() {\n    }\n})\n"})})})]})]})}function u(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function h(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},50065:function(e,n,i){i.d(n,{Z:function(){return r},a:function(){return l}});var a=i(67294);let t={},s=a.createContext(t);function l(e){let n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);