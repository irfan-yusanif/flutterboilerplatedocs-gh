"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["2970"],{40407:function(e,t,n){n.r(t),n.d(t,{default:()=>h,frontMatter:()=>a,metadata:()=>i,assets:()=>l,toc:()=>c,contentTitle:()=>o});var i=JSON.parse('{"id":"chat/prebuilt-screen","title":"Prebuilt Chat Screen","description":"Introduction to Chat in Dyte Meetings","source":"@site/docs/android/chat/prebuilt-screen.mdx","sourceDirName":"chat","slug":"/chat/prebuilt-screen","permalink":"/flutterboilerplatedocs/android/chat/prebuilt-screen","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Prebuilt Chat Screen"},"sidebar":"tutorialSidebar","previous":{"title":"Building Your Own UI","permalink":"/flutterboilerplatedocs/android/render-participant-videos/custom-ui"},"next":{"title":"Types","permalink":"/flutterboilerplatedocs/android/participants/introduction"}}'),s=n("85893"),r=n("50065");let a={sidebar_position:1,title:"Prebuilt Chat Screen"},o=void 0,l={},c=[{value:"Introduction to Chat in Dyte Meetings",id:"introduction-to-chat-in-dyte-meetings",level:2},{value:"Dyte&#39;s Prebuilt Chat Screen",id:"dytes-prebuilt-chat-screen",level:2},{value:"Using Dyte&#39;s Chat screen",id:"using-dytes-chat-screen",level:2},{value:"Wrap-Up",id:"wrap-up",level:2}];function d(e){let t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"introduction-to-chat-in-dyte-meetings",children:"Introduction to Chat in Dyte Meetings"}),"\n",(0,s.jsxs)(t.p,{children:["In Dyte meetings, participants can also engage in real-time communication by sending chat messages.\nThese messages can be text, images, or files, depending on the ",(0,s.jsx)(t.a,{href:"/guides/livestream/advanced/configuring-permissions#chat",children:"chat permissions"}),"\nset in their preset."]}),"\n",(0,s.jsx)(t.h2,{id:"dytes-prebuilt-chat-screen",children:"Dyte's Prebuilt Chat Screen"}),"\n",(0,s.jsx)(t.p,{children:"Dyte's Android UI Kit includes prebuilt Chat screen that handle the complete chat logic and offer\na range of features to enhance the chat experience in Dyte meetings:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Display Messages"}),": Displays all chat messages, including text, images, and files, in a clear and organized manner"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Image Preview"}),": Allows users to tap on an image message to view it in full screen"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"File Download"}),": Enables users to download files sent in chat messages with a simple tap"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Message Composer"}),": Provides a user-friendly interface for composing messages, supporting text,\nimage, and file messages. It automatically adjusts the UI based on the user's chat permissions,\nhiding or disabling options that are not permitted"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Auto-Scroll"}),": Auto-scrolls to new messages as they are received but stops auto-scrolling if the user\nhas scrolled up to read an old message"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Device Permissions"}),": Handles device permissions elegantly on all supported Android versions for sending images, files,\nand downloading files to the device. This saves developers effort, allowing them to focus on building their apps"]}),"\n"]}),"\n",(0,s.jsxs)("div",{id:"one",style:{display:"flex",flexDirection:"row",flexWrap:"wrap",flex:"1 1 0",justifyContent:"center"},children:[(0,s.jsx)("img",{src:"/static/android-ui-kit/chat/chat-prebuilt-screen-messages.png",alt:"Prebuilt Chat Screen Message List",width:"220",padding:"10",margin:"10 3",style:{margin:"10px",borderRadius:"8px"}}),(0,s.jsx)("img",{src:"/static/android-ui-kit/chat/chat-prebuilt-send-options.png",alt:"Prebuilt Chat Screen Send Options",width:"220",padding:"10",margin:"10 3",style:{margin:"10px",borderRadius:"8px"}})]}),"\n",(0,s.jsx)(t.h2,{id:"using-dytes-chat-screen",children:"Using Dyte's Chat screen"}),"\n",(0,s.jsx)(t.p,{children:"Dyte's prebuilt Chat screen comes in two variants:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"DyteChatBottomSheet"}),": Displays the chat UI as a full-screen bottom sheet that can be dismissed by swiping down."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:"import dyte.io.uikit.screens.chat.DyteChatBottomSheet\n\nval dyteChatBottomSheet = DyteChatBottomSheet()\ndyteChatBottomSheet.show(childFragmentManager, TAG)\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"DyteChatFragment"}),": Shows the chat UI inside an Android Fragment, providing the flexibility to display the chat UI\nfull screen or as a part of the screen with other UI elements."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",children:'\x3c!-- res/layout/meeting_activity.xml --\x3e\n<androidx.fragment.app.FragmentContainerView\n    android:id="@+id/fragment_container_view"\n    android:layout_width="match_parent"\n    android:layout_height="match_parent" />\n'})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-kotlin",children:"import dyte.io.uikit.screens.chat.DyteChatFragment\n\nval dyteChatFragment = DyteChatFragment()\nsupportFragmentManager.beginTransaction()\n                .replace(R.id.fragment_container_view, dyteChatFragment, TAG)\n                .commit()\n"})}),"\n",(0,s.jsx)(t.h2,{id:"wrap-up",children:"Wrap-Up"}),"\n",(0,s.jsx)(t.p,{children:"By integrating Dyte's prebuilt Chat screens into your app, you can enhance the communication experience for users\nduring Dyte meetings."})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return a}});var i=n(67294);let s={},r=i.createContext(s);function a(e){let t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);