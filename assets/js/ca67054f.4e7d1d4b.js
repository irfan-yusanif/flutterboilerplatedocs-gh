"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["85669"],{86675:function(e,i,t){t.r(i),t.d(i,{default:()=>l,frontMatter:()=>c,metadata:()=>n,assets:()=>o,toc:()=>p,contentTitle:()=>s});var n=JSON.parse('{"id":"participants/participant-object","title":"Participant Object","description":"The object corresponding to a particular participant.","source":"@site/docs/android-core/participants/participant-object.mdx","sourceDirName":"participants","slug":"/participants/participant-object","permalink":"/flutterboilerplatedocs/android-core/participants/participant-object","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"android-core","permalink":"/flutterboilerplatedocs/android-core/tags/android-core"},{"inline":true,"label":"participants","permalink":"/flutterboilerplatedocs/android-core/tags/participants"}],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Participant Object","description":"The object corresponding to a particular participant.","sidebar_position":2,"slug":"/participants/participant-object","tags":["android-core","participants"]},"sidebar":"tutorialSidebar","previous":{"title":"Participant Types","permalink":"/flutterboilerplatedocs/android-core/participants/"},"next":{"title":"Participant Events","permalink":"/flutterboilerplatedocs/android-core/participants/events"}}'),a=t("85893"),r=t("50065");let c={title:"Participant Object",description:"The object corresponding to a particular participant.",sidebar_position:2,slug:"/participants/participant-object",tags:["android-core","participants"]},s="The participant object",o={},p=[{value:"To get video view of a given participant",id:"to-get-video-view-of-a-given-participant",level:2},{value:"Move between pages in paginated mode",id:"move-between-pages-in-paginated-mode",level:2},{value:"Host Controls",id:"host-controls",level:2},{value:"Broadcast message to all participants",id:"broadcast-message-to-all-participants",level:2}];function d(e){let i={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components},{Head:t}=i;return!t&&function(e,i){throw Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"the-participant-object",children:"The participant object"})}),"\n",(0,a.jsxs)(i.p,{children:["The data regarding all meeting participants is stored under ",(0,a.jsx)(i.code,{children:"meeting.participants"}),". Use the methods and events to consume the participants data."]}),"\n",(0,a.jsxs)(i.p,{children:["The ",(0,a.jsx)(i.code,{children:"participant"})," object consists of all the information related to a particular participant. For instance, it contains a participants video/audio/screenshare stream, and the participant's name. It also contains state variables that indicate whether a participant's camera is on or off, and whether they are muted or unmuted."]}),"\n",(0,a.jsx)(i.p,{children:"The participant object has the following properties."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"id"}),": The ",(0,a.jsx)(i.code,{children:"participantId"})," of the participant (aka ",(0,a.jsx)(i.code,{children:"peerId"}),")."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"userId"}),": The ",(0,a.jsx)(i.code,{children:"userId"})," of the participant."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"name"}),": The participant's name."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"picture"}),": The participant's picture (if any)."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"clientSpecificId"}),": An arbitrary ID that can be set to identify the\nparticipant."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"videoTrack"}),": The video track of the participant."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"screenShareTrack"}),": The video and audio (if any) track of the participant's\nscreen share stream."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"videoEnabled"}),": Set to true if the participant's camera is on."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"audioEnabled"}),": Set to true if the participant is unmuted."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"isPinned"}),": True if current user is pinned in the meeting room."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"presetName"}),": Name of the preset associated with the participant."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"stageStatus"}),": Status of stage for the participant"]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"maxNumberOnScreen"}),": A int showing the maximum number of people set for this meeting."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"currentPageNumber"}),": A int showing the current page in this meeting. Participants from this page are filled in the ",(0,a.jsx)(i.code,{children:"active"})," list."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"pageCount"}),": A int showing total number of pages available in the meeting."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"canGoNextPage"}),": A boolean indicating if next page of joined participants is available to show."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.code,{children:"canGoPreviousPage"}),": A boolean indicating if previous page of joined participants is available to show."]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"to-get-video-view-of-a-given-participant",children:"To get video view of a given participant"}),"\n",(0,a.jsxs)(i.p,{children:["You can call ",(0,a.jsx)(i.code,{children:"participant.getVideoView()"})," which will return a View which further\ncan used to add in any ViewGroup in android."]}),"\n",(0,a.jsxs)(i.p,{children:["Similarly one can use ",(0,a.jsx)(i.code,{children:"participant.getScreenShareView()"})," which will return a\nView which further can used to add in any ViewGroup in android."]}),"\n",(0,a.jsx)(i.p,{children:"Similarly, you can also access the pagination related information like follows:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-kotlin",children:"val maxNumberOnScreen = meeting.participants.maxNumberOnScreen\nval currentPageNumber = meeting.participants.currentPageNumber\nval pageCount = meeting.participants.pageCount\nval canGoNextPage = meeting.participants.canGoNextPage\nval canGoPreviousPage = meeting.participants.canGoPreviousPage\n"})}),"\n",(0,a.jsx)(i.h2,{id:"move-between-pages-in-paginated-mode",children:"Move between pages in paginated mode"}),"\n",(0,a.jsxs)(i.p,{children:["The ",(0,a.jsx)(i.code,{children:"setPage(pageNumber: Int)"})," method allows you to switch between pages of participants present in the meeting."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-kotlin",children:"// switch to 1st page\nmeeting.participants.setPage(1)\n"})}),"\n",(0,a.jsx)(i.h2,{id:"host-controls",children:"Host Controls"}),"\n",(0,a.jsx)(i.p,{children:"If you (the local user) have the relevant permissions, you can disable a participant's video or audio, or kick them from the meeting."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-kotlin",children:"val participant = meeting.participants.joined.firstOrNull { it.id == participantId }\n\nparticipant?.let { pcpt ->\n  // To disable a participant's video stream\n  pcpt.disableVideo();\n\n  // To disable a participant's audio stream\n  pcpt.disableAudio();\n\n  // To kick a participant from the meeting\n  pcpt.kick();\n}\n"})}),"\n",(0,a.jsxs)(i.p,{children:["You can also ",(0,a.jsx)(i.code,{children:"pin"})," or ",(0,a.jsx)(i.code,{children:"unpin"}),' a participant in the meeting. All "pinned"\nparticipants are added to the ',(0,a.jsx)(i.code,{children:"meeting.participants.pinned"})," list."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-kotlin",children:"val participant = meeting.participants.joined.firstOrNull { it.id == participantId }\n\nparticipant?.let { pcpt ->\n  // To pin a participant\n  pcpt.pin();\n\n  // To unpin a participant\n  pcpt.unpin();\n}\n"})}),"\n",(0,a.jsx)(i.h2,{id:"broadcast-message-to-all-participants",children:"Broadcast message to all participants"}),"\n",(0,a.jsxs)(i.p,{children:["Send a message to all ",(0,a.jsx)(i.code,{children:"joined"})," participants."]}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.em,{children:"Parameters"}),":"]}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"type"}),': A client-specific type to differentiate between custom messages like "emoji" or "greetings"']}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.code,{children:"payload"}),": A map containing the message payload, where keys are strings and values are of ",(0,a.jsx)(i.code,{children:"Any"})," type."]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-kotlin",children:"// broadcast message\nmeeting.participants.broadcastMessage(type, payload)\n"})}),"\n",(0,a.jsxs)(t,{children:[(0,a.jsx)("title",{children:"Android Core The participant object"}),(0,a.jsx)("meta",{name:"description",content:"Explore the Android Participants Participant Object and its functionalities for effective integration in your application."})]})]})}function l(e={}){let{wrapper:i}={...(0,r.a)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},50065:function(e,i,t){t.d(i,{Z:function(){return s},a:function(){return c}});var n=t(67294);let a={},r=n.createContext(a);function c(e){let i=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);