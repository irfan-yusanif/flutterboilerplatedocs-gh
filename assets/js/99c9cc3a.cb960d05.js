"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["52641"],{48575:function(e,t,n){n.r(t),n.d(t,{default:()=>m,frontMatter:()=>r,metadata:()=>o,assets:()=>s,toc:()=>l,contentTitle:()=>c});var o=JSON.parse('{"id":"room-metadata","title":"Room Metadata","description":"All metadata pertaining to a meeting.","source":"@site/docs/rn-core/room-metadata.mdx","sourceDirName":".","slug":"/room-metadata","permalink":"/rn-core/room-metadata","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"rn-core","permalink":"/rn-core/tags/rn-core"},{"inline":true,"label":"room-metadata","permalink":"/rn-core/tags/room-metadata"}],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Room Metadata","description":"All metadata pertaining to a meeting.","sidebar_position":4,"tags":["rn-core","room-metadata"]},"sidebar":"tutorialSidebar","previous":{"title":"Other Methods","permalink":"/rn-core/local-user/extras"},"next":{"title":"Participant Maps","permalink":"/rn-core/participants/"}}'),i=n("85893"),a=n("50065");let r={title:"Room Metadata",description:"All metadata pertaining to a meeting.",sidebar_position:4,tags:["rn-core","room-metadata"]},c="Room Metadata",s={},l=[];function d(e){let t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components},{Head:n}=t;return!n&&function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"room-metadata",children:"Room Metadata"})}),"\n",(0,i.jsxs)(t.p,{children:["All metadata pertaining to a meeting is stored in ",(0,i.jsx)(t.code,{children:"meeting.meta"}),". This includes:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"viewType"}),": Indicates the type of the meeting, possible values are ",(0,i.jsx)(t.code,{children:"WEBINAR"}),",\n",(0,i.jsx)(t.code,{children:"GROUP_CALL"}),", ",(0,i.jsx)(t.code,{children:"LIVESTREAM"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"roomType"}),": Indicates the meeting is a group-call or a webinar."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"meetingTitle"}),": The title of the meeting."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"meetingStartedTimestamp"}),": The timestamp when the meeting started."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"socketConnected"}),": Boolean flag to show when the socket is connected."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"For example, if you want to get the title of the meeting the current participant\nis connected to, you can do so by doing:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"// Destructuring the metadata to get meetingTitle and joined\nconst { meetingTitle } = meeting.meta;\n\nif (meeting.self.roomJoined) {\n  console.log(\n    `The local user has joined a meeting with title ${meetingTitle}.`\n  );\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"meta"})," object also emits events for indicating the change in the connection\nstate of the room. For example, you can listen for the ",(0,i.jsx)(t.code,{children:"connected"})," event to know\nwhen the local user has successfully joined the room, and for the ",(0,i.jsx)(t.code,{children:"disconnected"}),"\nevent to find out if the local user's connection has dropped."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"meeting.meta.on('connected', () => {\n  console.log(\n    `The local user has successfully joined the meeting ${meeting.meta.meetingTitle}`\n  );\n});\n\nmeeting.meta.on('disconnected', () => {\n  console.log(\n    `The local user got disconnected from the meeting ${meeting.meta.meetingTitle}`\n  );\n});\n\nmeeting.meta.on('poorConnection', () => {\n  console.log(`The local user has poor network connection.`);\n});\n\nmeeting.meta.on('connectionError', ({ reason }) => {\n  console.log(`Could not connect to the room.`);\n});\n"})}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)("title",{children:"React Native Core Room Metadata"})})]})}function m(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return r}});var o=n(67294);let i={},a=o.createContext(i);function r(e){let t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);