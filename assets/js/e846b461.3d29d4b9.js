"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["36244"],{21646:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>a,metadata:()=>i,assets:()=>r,toc:()=>d,contentTitle:()=>s});var i=JSON.parse('{"id":"build-pre-call-ui/build-your-own/add-audio-video-device","title":"Audio/video - Device Selection","description":"To let the user choose between multiple available input / output devices, you can use the `` component","source":"@site/docs/react-ui-kit/build-pre-call-ui/build-your-own/add-audio-video-device.mdx","sourceDirName":"build-pre-call-ui/build-your-own","slug":"/build-pre-call-ui/build-your-own/add-audio-video-device","permalink":"/flutterboilerplatedocs/react-ui-kit/build-pre-call-ui/build-your-own/add-audio-video-device","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"Audio/video - Device Selection","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Audio/video - Preview","permalink":"/flutterboilerplatedocs/react-ui-kit/build-pre-call-ui/build-your-own/add-audio-video-preview"},"next":{"title":"Virtual background","permalink":"/flutterboilerplatedocs/react-ui-kit/build-pre-call-ui/build-your-own/add-middleware"}}'),o=t("85893"),l=t("50065");let a={title:"Audio/video - Device Selection",sidebar_position:4},s=void 0,r={},d=[];function c(e){let n={a:"a",code:"code",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["To let the user choose between multiple available input / output devices, you can use the ",(0,o.jsx)(n.code,{children:"<DyteSettings >"})," component"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"function DeviceSettings({ open, onClose }) {\n  const { meeting } = useDyteMeeting();\n  return (\n    <SomeDialogComponent open={open} onClose={onClose}>\n      <DyteSettings meeting={meeting} />\n    </SomeDialogComponent>\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you added ",(0,o.jsx)(n.code,{children:"DyteDialogManager"})," as suggested in the ",(0,o.jsx)(n.a,{href:"/react-ui-kit/build-pre-call-ui/build-your-own/initial-code-skeleton#file-meetingtsx",children:"Basic Structure"})," guide, you can also use ",(0,o.jsx)(n.code,{children:"<DyteSettingsToggle>"})," component to trigger the inbuilt Dialog."]}),"\n",(0,o.jsx)(n.p,{children:"Extending the last code sample with device selector."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",metastring:"live showLineNumbers",live:!0,children:'function CustomMeetingPreview() {\n  const { meeting } = useDyteMeeting();\n\n  return (\n    <div\n      className="bg-secondary-900 flex flex-col items-center justify-center"\n      style={{ minHeight: \'400px\' }}\n    >\n      {/* Do not re-add this, if already added in the parent component */}\n      <DyteDialogManager meeting={meeting} />\n      <div className="flex w-full items-center justify-around p-[10%]">\n        <div className="relative">\n          <DyteParticipantTile meeting={meeting} participant={meeting.self}>\n            <DyteAvatar participant={meeting.self} />\n            <DyteNameTag participant={meeting.self}>\n              <DyteAudioVisualizer participant={meeting.self} slot="start" />\n            </DyteNameTag>\n            <div\n              className="absolute flex"\n              style={{\n                top: \'8px\',\n                right: \'8px\',\n              }}\n            >\n              <DyteSettingsToggle meeting={meeting} size="sm" />\n            </div>\n            <div\n              id="user-actions"\n              className="absolute flex"\n              style={{\n                bottom: \'8px\',\n                right: \'8px\',\n              }}\n            >\n              <DyteMicToggle meeting={meeting} size="sm" />\n              <DyteCameraToggle meeting={meeting} size="sm" />\n            </div>\n          </DyteParticipantTile>\n        </div>\n        <div className="flex w-1/4 flex-col justify-between">\n          <div className="flex flex-col items-center">\n            <p>Joining as {meeting.self.name}</p>\n          </div>\n          <DyteButton\n            kind="wide"\n            size="lg"\n            onClick={async () => {\n              await meeting.join();\n            }}\n          >\n            Join\n          </DyteButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n'})})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return a}});var i=t(67294);let o={},l=i.createContext(o);function a(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);