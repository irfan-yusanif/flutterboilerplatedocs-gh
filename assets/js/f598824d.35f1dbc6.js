"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["27673"],{21893:function(e,t,n){n.r(t),n.d(t,{default:()=>g,frontMatter:()=>r,metadata:()=>s,assets:()=>o,toc:()=>d,contentTitle:()=>c});var s=JSON.parse('{"id":"chat/introduction","title":"Introducing chat","description":"Send and receive chat messages in a meeting.","source":"@site/docs/react-web-core/chat/introduction.mdx","sourceDirName":"chat","slug":"/chat/introduction","permalink":"/flutterboilerplatedocs/react-web-core/chat/introduction","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"web-core","permalink":"/flutterboilerplatedocs/react-web-core/tags/web-core"},{"inline":true,"label":"chat","permalink":"/flutterboilerplatedocs/react-web-core/tags/chat"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Introducing chat","description":"Send and receive chat messages in a meeting.","sidebar_position":1,"tags":["web-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Permissions","permalink":"/flutterboilerplatedocs/react-web-core/participants/permissions"},"next":{"title":"Sending a chat message","permalink":"/flutterboilerplatedocs/react-web-core/chat/sending-a-chat-message"}}'),a=n("85893"),i=n("50065");let r={title:"Introducing chat",description:"Send and receive chat messages in a meeting.",sidebar_position:1,tags:["web-core","chat"]},c="Introducing chat",o={},d=[];function l(e){let t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components},{Head:n}=t;return!n&&function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"introducing-chat",children:"Introducing chat"})}),"\n",(0,a.jsxs)(t.p,{children:["The meeting chat object is stored in ",(0,a.jsx)(t.code,{children:"meeting.chat"}),", which has methods for\nsending and receiving messages. There are 3 types of messages that can be sent\nin chat - text messages, images, and files."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"meeting.chat.messages"})," array contains all the messages that have been sent\nin the chat. This is an array of objects, where each object is of type\n",(0,a.jsx)(t.code,{children:"Message"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["The type ",(0,a.jsx)(t.code,{children:"Message"})," is defined in the following manner."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"interface BaseMessage<T extends MessageType> {\n  type: T;\n  userId: string;\n  displayName: string;\n  time: Date;\n  id: string;\n  isEdited?: boolean;\n  read?: boolean;\n  pluginId?: string;\n  pinned?: boolean;\n  targetUserIds?: string[];\n}\n\ninterface TextMessage extends BaseMessage<MessageType.text> {\n  message: string;\n}\n\ninterface ImageMessage extends BaseMessage<MessageType.image> {\n  link: string;\n}\n\ninterface FileMessage extends BaseMessage<MessageType.file> {\n  name: string;\n  size: number;\n  link: string;\n}\n\ntype Message = TextMessage | ImageMessage | FileMessage;\n"})}),"\n",(0,a.jsx)(n,{children:(0,a.jsx)("title",{children:"React Web Core Introducing chat"})})]})}function g(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return r}});var s=n(67294);let a={},i=s.createContext(a);function r(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);