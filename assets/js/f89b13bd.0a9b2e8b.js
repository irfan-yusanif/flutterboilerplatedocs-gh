"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["20749"],{65920:function(e,t,s){s.r(t),s.d(t,{default:()=>l,frontMatter:()=>c,metadata:()=>n,assets:()=>r,toc:()=>h,contentTitle:()=>o});var n=JSON.parse('{"id":"chat/receiving-chat-messages","title":"Receiving chat messages","description":"\\"Discover how to implement the functionality to receive chat messages in your iOS app using Dyte","source":"@site/docs/ios-core/chat/receiving-chat-messages.mdx","sourceDirName":"chat","slug":"/chat/receiving-chat-messages","permalink":"/ios-core/chat/receiving-chat-messages","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"ios-core","permalink":"/ios-core/tags/ios-core"},{"inline":true,"label":"chat","permalink":"/ios-core/tags/chat"}],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Receiving chat messages","description":"\\"Discover how to implement the functionality to receive chat messages in your iOS app using Dyte","sidebar_position":3,"tags":["ios-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Sending a chat message","permalink":"/ios-core/chat/sending-a-chat-message"},"next":{"title":"Room Metadata","permalink":"/ios-core/room-metadata"}}'),a=s("85893"),i=s("50065");let c={title:"Receiving chat messages",description:'"Discover how to implement the functionality to receive chat messages in your iOS app using Dyte',sidebar_position:3,tags:["ios-core","chat"]},o="Receiving chat messages",r={},h=[];function d(e){let t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"receiving-chat-messages",children:"Receiving chat messages"})}),"\n",(0,a.jsxs)(t.p,{children:["To be able to receive chat messages you need to implement a method\n",(0,a.jsx)(t.code,{children:"onChatUpdates()"})," method from callback ",(0,a.jsx)(t.code,{children:"DyteChatEventsListener"}),". You can\nsubscribe to this events by calling\n",(0,a.jsx)(t.code,{children:"meeting.addChatEventsListener(dyteChatEventsListener)"})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-swift",children:"extension MeetingViewModel: DyteChatEventsListener {\n  func onChatUpdates(messages: [DyteChatMessage]) {\n  // to load chat messages\n  }\n\n  func onNewChatMessage(message: DyteChatMessage) {\n    // when a new chat message is shared in the meeting\n  }\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"onChatUpdates()"})," method will be called whenever there is a change in the chat messages. The ",(0,a.jsx)(t.code,{children:"messages"})," parameter is a list of ",(0,a.jsx)(t.code,{children:"DyteChatMessage"})," objects that have been sent in the chat."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"onNewChatMessage()"})," method will be called whenever a new chat message is shared in the meeting. The ",(0,a.jsx)(t.code,{children:"message"})," parameter is a ",(0,a.jsx)(t.code,{children:"DyteChatMessage"})," object that has been sent in the chat."]})]})}function l(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},50065:function(e,t,s){s.d(t,{Z:function(){return o},a:function(){return c}});var n=s(67294);let a={},i=n.createContext(a);function c(e){let t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);