"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["89861"],{34573:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>a,contentTitle:()=>l});var s=JSON.parse('{"id":"socketio-client/emitting","title":"Events","description":"There are several ways to send events between the server and the client.","source":"@site/docs/community-packages/socketio-client/emitting.mdx","sourceDirName":"socketio-client","slug":"/socketio-client/emitting","permalink":"/community-packages/socketio-client/emitting","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Initialization","permalink":"/community-packages/socketio-client/initialization"}}'),i=t("85893"),o=t("50065");let r={sidebar_position:3},l="Events",c={},a=[{value:"Basic emit",id:"basic-emit",level:2},{value:"Listen for events",id:"listen-for-events",level:2},{value:"Acknowledgements",id:"acknowledgements",level:2},{value:"From client to server",id:"from-client-to-server",level:3},{value:"From server to client",id:"from-server-to-client",level:3}];function d(e){let n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.a)(),...e.components},{Head:t}=n;return!t&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"events",children:"Events"})}),"\n",(0,i.jsx)(n.p,{children:"There are several ways to send events between the server and the client."}),"\n",(0,i.jsx)(n.h2,{id:"basic-emit",children:"Basic emit"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Client"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'socket.emit("hello", "world");\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Server"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"io.on('connection', (socket) => {\n  socket.on('hello', (arg) => {\n    console.log(arg); // world\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"listen-for-events",children:"Listen for events"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Server"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"io.on('connection', (socket) => {\n  socket.emit('hello', 'world');\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Client"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'socket.onEvent("hello") { args ->\n    println(args[0]); // world\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"acknowledgements",children:"Acknowledgements"}),"\n",(0,i.jsx)(n.p,{children:"Events are great, but in some cases you may want a more classic request-response API. In Socket.IO, this feature is named acknowledgements."}),"\n",(0,i.jsxs)(n.p,{children:["You can add a callback as the last argument of the ",(0,i.jsx)(n.code,{children:"emit()"}),", and this callback will be called once the other side acknowledges the event:"]}),"\n",(0,i.jsx)(n.h3,{id:"from-client-to-server",children:"From client to server"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Client"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'\nsocket.emit("update item", 1, fun(data: ArrayList<JsonElement>) {\n    val response = data[0] as JSONObject;\n    println(response.getString("status")); // "ok"\n})\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Server"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"io.on('connection', (socket) => {\n  socket.on('update item', (arg1, arg2, callback) => {\n    console.log(arg1); // 1\n    console.log(arg2); // { name: \"updated\" }\n    callback({\n      status: 'ok',\n    });\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"from-server-to-client",children:"From server to client"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Server"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"io.on('connection', (socket) => {\n  socket.emit('hello', 'please acknowledge', (response) => {\n    console.log(response); // prints \"hi!\"\n  });\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Client"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'socket.on("hello") { args, ack ->\n    println(args[0]); // "please acknowledge"\n    ack?.invoke("hi!");\n}\n'})}),"\n",(0,i.jsx)(t,{children:(0,i.jsx)("title",{children:"Community Packages Events"})})]})}function h(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return r}});var s=t(67294);let i={},o=s.createContext(i);function r(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);