"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["62401"],{13293:function(e,t,n){n.r(t),n.d(t,{default:()=>p,frontMatter:()=>s,metadata:()=>o,assets:()=>l,toc:()=>u,contentTitle:()=>a});var o=JSON.parse('{"id":"build-pre-call-ui/default-setup-screen","title":"DyteSetupScreen","description":"Dyte provides a default pre-call preview UI, also known as setup screen as part of our UI components.","source":"@site/docs/rn-ui-kit/build-pre-call-ui/default-setup-screen.mdx","sourceDirName":"build-pre-call-ui","slug":"/build-pre-call-ui/default-setup-screen","permalink":"/flutterboilerplatedocs/react-native/build-pre-call-ui/default-setup-screen","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"DyteSetupScreen","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Use React Native Core Hooks","permalink":"/flutterboilerplatedocs/react-native/using-hooks"},"next":{"title":"Basic structure","permalink":"/flutterboilerplatedocs/react-native/build-pre-call-ui/build-your-own/initial-code-skeleton"}}'),r=n("85893"),i=n("50065");let s={title:"DyteSetupScreen",sidebar_position:4},a=void 0,l={},u=[];function c(e){let t={code:"code",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Dyte provides a default pre-call preview UI, also known as setup screen as part of our UI components."}),"\n",(0,r.jsx)(t.p,{children:"Previously in the Quickstart example, we used the following component."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"<DyteMeeting meeting={meeting} showSetupScreen={true} />\n"})}),"\n",(0,r.jsx)(t.p,{children:"If you want to break down the above for a custom UI but still want to reuse the default setup screen, use the following component."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import { DyteSetupScreen, DyteText } from '@dytesdk/react-native-ui-kit';\nimport { useDyteMeeting, useDyteSelector } from '@dytesdk/react-native-core';\n\nexport default function MyMeeting() {\n  const { meeting } = useDyteMeeting();\n  const roomState = useDyteSelector((m) => m.self.roomState);\n\n  return (\n    <View>\n      {roomState === 'init' && <DyteSetupScreen meeting={meeting} />}\n      {roomState === 'joined' && <DyteText>Custom in-meeting UI</DyteText>}\n      {roomState === 'ended' && <DyteText>Custom post-meeting UI</DyteText>}\n    </View>\n  );\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"If you want to build a custom pre-call UI, let's go to the next page to start building one."})]})}function p(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return a},a:function(){return s}});var o=n(67294);let r={},i=o.createContext(r);function s(e){let t=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);