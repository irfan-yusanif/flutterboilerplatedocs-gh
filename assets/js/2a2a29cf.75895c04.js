"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["59317"],{9653:function(e,n,t){t.r(n),t.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>s,assets:()=>o,toc:()=>d,contentTitle:()=>c});var s=JSON.parse('{"id":"chat/introduction","title":"Introducing chat","description":"Send and receive chat messages in a meeting.","source":"@site/docs/web-core/chat/introduction.mdx","sourceDirName":"chat","slug":"/chat/introduction","permalink":"/web-core/chat/introduction","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"web-core","permalink":"/web-core/tags/web-core"},{"inline":true,"label":"chat","permalink":"/web-core/tags/chat"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Introducing chat","description":"Send and receive chat messages in a meeting.","sidebar_position":1,"tags":["web-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Permissions","permalink":"/web-core/participants/permissions"},"next":{"title":"Sending a chat message","permalink":"/web-core/chat/sending-a-chat-message"}}'),i=t("85893"),a=t("50065");let r={title:"Introducing chat",description:"Send and receive chat messages in a meeting.",sidebar_position:1,tags:["web-core","chat"]},c="Introducing chat",o={},d=[];function g(e){let n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.a)(),...e.components},{Head:t}=n;return!t&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introducing-chat",children:"Introducing chat"})}),"\n",(0,i.jsxs)(n.p,{children:["The meeting chat object is stored in ",(0,i.jsx)(n.code,{children:"meeting.chat"}),", which has methods for\nsending and receiving messages. There are 3 types of messages that can be sent\nin chat - text messages, images, and files."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"meeting.chat.messages"})," array contains all the messages that have been sent\nin the chat. This is an array of objects, where each object is of type\n",(0,i.jsx)(n.code,{children:"Message"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The type ",(0,i.jsx)(n.code,{children:"Message"})," is defined in the following manner."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"interface BaseMessage<T extends MessageType> {\n  type: T;\n  userId: string;\n  displayName: string;\n  time: Date;\n  id: string;\n  isEdited?: boolean;\n  read?: boolean;\n  pluginId?: string;\n  pinned?: boolean;\n  targetUserIds?: string[];\n}\n\ninterface TextMessage extends BaseMessage<MessageType.text> {\n  message: string;\n}\n\ninterface ImageMessage extends BaseMessage<MessageType.image> {\n  link: string;\n}\n\ninterface FileMessage extends BaseMessage<MessageType.file> {\n  name: string;\n  size: number;\n  link: string;\n}\n\ntype Message = TextMessage | ImageMessage | FileMessage;\n"})}),"\n",(0,i.jsx)(t,{children:(0,i.jsx)("title",{children:"Web Core Introducing chat"})})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return r}});var s=t(67294);let i={},a=s.createContext(i);function r(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);