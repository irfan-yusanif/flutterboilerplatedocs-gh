"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["74030"],{92415:function(e,t,n){n.r(t),n.d(t,{default:()=>l,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>d,contentTitle:()=>o});var s=JSON.parse('{"id":"chat/receiving-chat-messages","title":"Receiving chat messages","description":"\\"Discover how to implement the functionality to receive chat messages in your Android app using Dyte","source":"@site/docs/android-core/chat/receiving-chat-messages.mdx","sourceDirName":"chat","slug":"/chat/receiving-chat-messages","permalink":"/android-core/chat/receiving-chat-messages","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"android-core","permalink":"/android-core/tags/android-core"},{"inline":true,"label":"chat","permalink":"/android-core/tags/chat"}],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Receiving chat messages","description":"\\"Discover how to implement the functionality to receive chat messages in your Android app using Dyte","sidebar_position":3,"tags":["android-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Sending a chat message","permalink":"/android-core/chat/sending-a-chat-message"},"next":{"title":"Introduction","permalink":"/android-core/plugins/introduction"}}'),i=n("85893"),a=n("50065");let r={title:"Receiving chat messages",description:'"Discover how to implement the functionality to receive chat messages in your Android app using Dyte',sidebar_position:3,tags:["android-core","chat"]},o="Receiving chat messages",c={},d=[];function h(e){let t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.a)(),...e.components},{Head:n}=t;return!n&&function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"receiving-chat-messages",children:"Receiving chat messages"})}),"\n",(0,i.jsxs)(t.p,{children:["To be able to receive chat messages you need to implement a method\n",(0,i.jsx)(t.code,{children:"onChatUpdates()"})," method from callback ",(0,i.jsx)(t.code,{children:"DyteChatEventsListener"}),". You can\nsubscribe to this events by calling\n",(0,i.jsx)(t.code,{children:"meeting.addChatEventsListener(dyteChatEventsListener)"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-kotlin",children:"meeting.addChatEventsListener(object :\n  DyteChatEventsListener {\n    override fun onChatUpdates(messages: List<DyteChatMessage>) {\n      // to load chat messages\n    }\n\n    override fun onNewChatMessage(message: DyteChatMessage) {\n      // when a new chat message is shared in the meeting\n    }\n\n    override fun onMessageRateLimitReset() {\n      // when the rate limit for sending messages of self is reset\n    }\n  })\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"onChatUpdates()"})," method will be called whenever there is a change in the chat messages. The ",(0,i.jsx)(t.code,{children:"messages"})," parameter is a list of ",(0,i.jsx)(t.code,{children:"DyteChatMessage"})," objects that have been sent in the chat."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"onNewChatMessage()"})," method will be called whenever a new chat message is shared in the meeting. The ",(0,i.jsx)(t.code,{children:"message"})," parameter is a ",(0,i.jsx)(t.code,{children:"DyteChatMessage"})," object that has been sent in the chat."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"onMessageRateLimitReset()"})," method will be called when the rate limit for sending messages of self is reset and you can send messages again. The default rate limit is 180 messages within 60 seconds."]}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)("title",{children:"Android Core Receiving chat"})})]})}function l(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return r}});var s=n(67294);let i={},a=s.createContext(i);function r(e){let t=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);