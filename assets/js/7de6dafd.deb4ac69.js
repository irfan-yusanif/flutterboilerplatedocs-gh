"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["13195"],{13991:function(e,n,t){t.r(n),t.d(n,{default:()=>l,frontMatter:()=>c,metadata:()=>s,assets:()=>o,toc:()=>h,contentTitle:()=>r});var s=JSON.parse('{"id":"chat/other-chat-functions","title":"Other chat functions","description":"Other functionality associated with chat.","source":"@site/docs/web-core/chat/other-chat-functions.mdx","sourceDirName":"chat","slug":"/chat/other-chat-functions","permalink":"/web-core/chat/other-chat-functions","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"web-core","permalink":"/web-core/tags/web-core"},{"inline":true,"label":"chat","permalink":"/web-core/tags/chat"}],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Other chat functions","description":"Other functionality associated with chat.","sidebar_position":5,"tags":["web-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Editing Chat Messages","permalink":"/web-core/chat/edit-chat-messages"},"next":{"title":"Introduction","permalink":"/web-core/plugins/introduction"}}'),a=t("85893"),i=t("50065");let c={title:"Other chat functions",description:"Other functionality associated with chat.",sidebar_position:5,tags:["web-core","chat"]},r="Other chat functions",o={},h=[{value:"Get messages by a user",id:"get-messages-by-a-user",level:2},{value:"Get messages of a particular type",id:"get-messages-of-a-particular-type",level:2},{value:"Pinning a chat message",id:"pinning-a-chat-message",level:2},{value:"Deleting a chat message",id:"deleting-a-chat-message",level:2}];function d(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components},{Head:t}=n;return!t&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"other-chat-functions",children:"Other chat functions"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"meeting.chat"})," object exposes certain other methods for convenience when\nworking with chat."]}),"\n",(0,a.jsx)(n.h2,{id:"get-messages-by-a-user",children:"Get messages by a user"}),"\n",(0,a.jsxs)(n.p,{children:["You can get messages by a particular user by passing the user's ID to the\n",(0,a.jsx)(n.code,{children:"meeting.chat.getMessagesByUser()"})," method."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Find the userId of the user with name \"Freddie\".\nconst { userId } = meeting.participants.joined\n  .toArray()\n  .find((p) => p.name === 'Freddie');\n\nconst messages = meeting.chat.getMessagesByUser(userId);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"get-messages-of-a-particular-type",children:"Get messages of a particular type"}),"\n",(0,a.jsxs)(n.p,{children:["You can also get messages of a particular type using the\n",(0,a.jsx)(n.code,{children:"meeting.chat.getMessagesByType()"})," method. For example, you can get all image\nmessages present in the chat using the following snippet."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const imageMessages = meeting.chat.getMessagesByType('image');\n"})}),"\n",(0,a.jsx)(n.h2,{id:"pinning-a-chat-message",children:"Pinning a chat message"}),"\n",(0,a.jsxs)(n.p,{children:["You can ",(0,a.jsx)(n.code,{children:"pin"})," a number of messages to the chat. When you pin a message, the\nmessage object will have the attribute ",(0,a.jsx)(n.code,{children:"pinned: true"}),", using which you can\nidentify if a message is pinned."]}),"\n",(0,a.jsx)(n.p,{children:"To pin a message, run the following snippet."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Let's say we want to pin the first message in the chat (could be a text, image, or file).\nconst { id } = meeting.chat.messages[0];\n\nawait meeting.chat.pin(id);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Once you pin a message, it will be added to ",(0,a.jsx)(n.code,{children:"meeting.chat.pinned"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const { id } = meeting.chat.messages[0];\n\nawait meeting.chat.pin(id);\n\nconsole.log(meeting.chat.pinned);\nconsole.log(meeting.chat.pinned.length > 0); // Should be true\n"})}),"\n",(0,a.jsxs)(n.p,{children:["You can also unpin a pinned message, by using the ",(0,a.jsx)(n.code,{children:"meeting.chat.unpin()"})," method."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"// Unpin the first pinned message.\n\nconst { id } = meeting.chat.pinned[0];\nawait meeting.chat.unpin(id);\n"})}),"\n",(0,a.jsx)(n.p,{children:"You can listen for events to know when a message is pinned or unpinned."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"meeting.chat.on('pinMessage', ({ message }) => {\n  console.log('A message was pinned', JSON.stringify(message));\n});\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"meeting.chat.on('unpinMessage', ({ message }) => {\n  console.log('A message was unpinned', JSON.stringify(message));\n});\n"})}),"\n",(0,a.jsx)(n.h2,{id:"deleting-a-chat-message",children:"Deleting a chat message"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"meeting.chat"})," namespace exposes a method called ",(0,a.jsx)(n.code,{children:"deleteMessage()"}),". It takes\na parameter ",(0,a.jsx)(n.code,{children:"meesageId"})," of type ",(0,a.jsx)(n.code,{children:"string"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"const messageId = '...';\nawait meeting.chat.deleteMessage(messageId);\n"})}),"\n",(0,a.jsx)(t,{children:(0,a.jsx)("title",{children:"Web Core Other chat functions"})})]})}function l(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return c}});var s=t(67294);let a={},i=s.createContext(a);function c(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);