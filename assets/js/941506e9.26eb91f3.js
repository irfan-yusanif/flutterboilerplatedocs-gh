"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["63196"],{46366:function(e,n,i){i.r(n),i.d(n,{default:()=>h,frontMatter:()=>d,metadata:()=>r,assets:()=>a,toc:()=>o,contentTitle:()=>l});var r=JSON.parse('{"id":"upgrade-v2/introduction","title":"Introduction","description":"With the v2 release of the Dyte Core SDK, we\'re introducing a major upgrade focused on making the development experience simpler, more consistent, and intuitive. This upgrade introduces breaking changes across four key areas:","source":"@site/docs/android-core/upgrade-v2/1-introduction.mdx","sourceDirName":"upgrade-v2","slug":"/upgrade-v2/introduction","permalink":"/android-core/upgrade-v2/introduction","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"android-core","permalink":"/android-core/tags/android-core"},{"inline":true,"label":"v2","permalink":"/android-core/tags/v-2"}],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Introduction","sidebar_position":1,"tags":["android-core","v2"]},"sidebar":"tutorialSidebar","previous":{"title":"Quickstart","permalink":"/android-core/"},"next":{"title":"Breaking Changes and Migration Guide","permalink":"/android-core/upgrade-v2/breaking-changes-migration"}}'),s=i("85893"),t=i("50065");let d={title:"Introduction",sidebar_position:1,tags:["android-core","v2"]},l=void 0,a={},o=[{value:"1. Migration to V2 REST API Terminology",id:"1-migration-to-v2-rest-api-terminology",level:3},{value:"2. Removal of Deprecated APIs",id:"2-removal-of-deprecated-apis",level:3},{value:"3. Revamped Error Handling",id:"3-revamped-error-handling",level:3},{value:"4. API Structural Changes",id:"4-api-structural-changes",level:3}];function c(e){let n={br:"br",code:"code",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"With the v2 release of the Dyte Core SDK, we're introducing a major upgrade focused on making the development experience simpler, more consistent, and intuitive. This upgrade introduces breaking changes across four key areas:"}),"\n",(0,s.jsx)(n.h3,{id:"1-migration-to-v2-rest-api-terminology",children:"1. Migration to V2 REST API Terminology"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"meeting.meta.roomName"})," -> ",(0,s.jsx)(n.code,{children:"meeting.meta.meetingId"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DyteMeetingParticipant.clientSpecificId"})," -> ",(0,s.jsx)(n.code,{children:"DyteMeetingParticipant.customParticipantId"})]}),"\n",(0,s.jsxs)(n.li,{children:["Removed ",(0,s.jsx)(n.code,{children:"DyteMeetingInfo"})," (V1)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-removal-of-deprecated-apis",children:"2. Removal of Deprecated APIs"}),"\n",(0,s.jsx)(n.p,{children:"We have removed deprecated methods and properties in favour of improved, uniform, and clearer versions."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Removed ",(0,s.jsx)(n.code,{children:"DyteParticipants.screenshares"})," (use ",(0,s.jsx)(n.code,{children:"DyteParticipants.screenShares"}),"). The deprecated type ",(0,s.jsx)(n.code,{children:"DyteScreenShareMeetingParticipant"})," has also been removed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Chat Methods"}),": Removed deprecated file and image send methods. The new lambda-based methods take more reliable ",(0,s.jsx)(n.code,{children:"Uri"}),"s & return proper errors","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["File message methods:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Removed:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendFileMessage(filePath: String)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendFileMessage(filePath: String, fileName: String)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendFileMessage(fileUri: Uri)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use instead:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendFileMessage(fileUri: Uri, onResult: (ChatFileError?) -> Unit)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Removed:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendFileMessage(filePath: String, peerIds: List<String>)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendFileMessage(fileUri: Uri, peerIds: List<String>)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use instead:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendFileMessage(fileUri: Uri, peerIds: List<String>, onResult: (ChatFileError?) -> Unit)"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Image message methods:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Removed:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(filePath: String, fileName: String)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(imageUri: Uri)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(imagePath: String)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use instead:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(imageUri: Uri, onResult: (ChatFileError?) -> Unit)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Removed:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(imagePath: String, peerIds: List<String>)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(imageUri: Uri, peerIds: List<String>)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(filePath: String, fileName: String, peerIds: List<String>)"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Use instead:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"sendImageMessage(imageUri: Uri, peerIds: List<String>, onResult: (ChatFileError?) -> Unit)"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Removed deprecated listener callbacks:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DyteSelfEventsListener.onStageStatusUpdated"}),". Use\xa0",(0,s.jsx)(n.code,{children:"DyteStageEventListener.onStageStatusUpdated()"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"DyteStageEventListener.onPresentRequestAccepted(participant: DyteJoinedMeetingParticipant)"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DyteMeetingRoomEventsListener.onActiveTabUpdate(id: String, tabType: ActiveTabType)"}),".",(0,s.jsx)(n.br,{}),"\n","Use\xa0",(0,s.jsx)(n.code,{children:"DyteMeetingRoomEventsListener.onActiveTabUpdate(meeting: DyteMobileClient, activeTab: ActiveTab)"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-revamped-error-handling",children:"3. Revamped Error Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Errors are categorised by modules, such as ",(0,s.jsx)(n.code,{children:"ChatError"}),", ",(0,s.jsx)(n.code,{children:"SelfError"}),", and ",(0,s.jsx)(n.code,{children:"MeetingError"})]}),"\n",(0,s.jsx)(n.li,{children:"All public APIs provide proper errors and additional error data where applicable for better debugging"}),"\n",(0,s.jsx)(n.li,{children:"Utilises Kotlin sealed classes for better type safety"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"4-api-structural-changes",children:"4. API Structural Changes"}),"\n",(0,s.jsxs)(n.p,{children:["We made a few direct breaking changes in our APIs to simplify the types, make methods more intuitive and ensure uniformity across platforms.\xa0\nFor example, ",(0,s.jsx)(n.code,{children:"DyteMeetingParticipant"})," has been restructured to align with real-world entities."]}),"\n",(0,s.jsx)(n.p,{children:"Learn more about the direct breaking changes and migration instructions on the next page."})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},50065:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return d}});var r=i(67294);let s={},t=r.createContext(s);function d(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);