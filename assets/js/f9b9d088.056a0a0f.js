"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([["74892"],{9559:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>r,metadata:()=>i,assets:()=>c,toc:()=>o,contentTitle:()=>d});var i=JSON.parse('{"id":"chat/sending-a-chat-message","title":"Sending a chat message","description":"\\"Master the process of sending chat messages within your Android application with Dyte","source":"@site/docs/android-core/chat/sending-a-chat-message.mdx","sourceDirName":"chat","slug":"/chat/sending-a-chat-message","permalink":"/android-core/chat/sending-a-chat-message","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"android-core","permalink":"/android-core/tags/android-core"},{"inline":true,"label":"chat","permalink":"/android-core/tags/chat"}],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Sending a chat message","description":"\\"Master the process of sending chat messages within your Android application with Dyte","sidebar_position":2,"tags":["android-core","chat"]},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/android-core/chat/introduction"},"next":{"title":"Receiving chat messages","permalink":"/android-core/chat/receiving-chat-messages"}}'),a=s("85893"),t=s("50065");let r={title:"Sending a chat message",description:'"Master the process of sending chat messages within your Android application with Dyte',sidebar_position:2,tags:["android-core","chat"]},d="Sending a chat message",c={},o=[{value:"Send a text message",id:"send-a-text-message",level:2},{value:"Send an image",id:"send-an-image",level:2},{value:"Send a file",id:"send-a-file",level:2},{value:"Chat Errors",id:"chat-errors",level:2}];function l(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components},{Head:s}=n;return!s&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"sending-a-chat-message",children:"Sending a chat message"})}),"\n",(0,a.jsxs)(n.p,{children:["As mentioned in ",(0,a.jsx)(n.a,{href:"./introduction",children:"introduction"}),", there are 3 types of chat messages - text messages, images, and files. There is a method in ",(0,a.jsx)(n.code,{children:"meeting.chat"})," to send a message of each type."]}),"\n",(0,a.jsx)(n.h2,{id:"send-a-text-message",children:"Send a text message"}),"\n",(0,a.jsxs)(n.p,{children:["To send a text message, the ",(0,a.jsx)(n.code,{children:"meeting.chat.sendTextMessage()"})," method can be used. This accepts a string ",(0,a.jsx)(n.code,{children:"message"})," and sends it to the room."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'val message = "Is this the real life?"\nmeeting.chat.sendTextMessage(message)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"send-an-image",children:"Send an image"}),"\n",(0,a.jsxs)(n.p,{children:["You can send an image with the help of ",(0,a.jsx)(n.code,{children:"meeting.chat.sendImageMessage()"})," and\nsends it to the participants in the meeting."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"meeting.chat.sendImageMessage(imageUri) { err ->\n  // Handle error if any\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"send-a-file",children:"Send a file"}),"\n",(0,a.jsxs)(n.p,{children:["Sending a file is quite similar to sending an image. The only difference is that when you send an image, a preview will be shown in the meeting chat, which is not the case for sending files. That being said, an image can be sent as a file too using ",(0,a.jsx)(n.code,{children:"meeting.chat.sendFileMessage()"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"meeting.chat.sendFileMessage(fileUri) { err ->\n  // Handle error if any\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"chat-errors",children:"Chat Errors"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"sendTextMessage"})," method returns a ",(0,a.jsx)(n.code,{children:"ChatTextError"})," if the operation fails, ",(0,a.jsx)(n.code,{children:"null"})," if successful. The error can be the following:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"PermissionDenied"}),": The user does not have permission to send a message."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"MessageIsBlank"}),": The message is empty."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"CharacterLimitExceeded"}),": The message exceeds the character limit. Default limit is 2000 characters."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"RateLimitBreached"}),": The user has sent too many messages in a short period of time."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Both ",(0,a.jsx)(n.code,{children:"sendImageMessage"})," and ",(0,a.jsx)(n.code,{children:"sendFileMessage"})," methods accept a callback function that will be called with a ",(0,a.jsx)(n.code,{children:"ChatFileError"})," if the operation is not successful, otherwise with ",(0,a.jsx)(n.code,{children:"null"})," if successful."]}),"\n",(0,a.jsxs)(n.p,{children:["Possible ",(0,a.jsx)(n.code,{children:"ChatFileError"}),"s are:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"FileFormatNotAllowed"}),": The file format is not allowed."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"PermissionDenied"}),": The user does not have permission to send a file."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"RateLimitBreached"}),": The user has breached the rate limit for sending messages."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"ReadFailed"}),": The file could not be read."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"UploadFailed"}),": The file could not be uploaded."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"when"})," block can be used to handle these errors inside the callback, as shown below:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"when (err) {\n  is ChatFileError.FileFormatNotAllowed -> {}\n  is ChatFileError.PermissionDenied -> {}\n  is ChatFileError.RateLimitBreached -> {}\n  is ChatFileError.ReadFailed -> {}\n  is ChatFileError.UploadFailed -> {}\n  else -> {}\n}\n"})}),"\n",(0,a.jsx)(s,{children:(0,a.jsx)("title",{children:"Android Core Sending chat"})})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return d},a:function(){return r}});var i=s(67294);let a={},t=i.createContext(a);function r(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);